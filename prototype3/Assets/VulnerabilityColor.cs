using System.Collections;
// Unity UI is important to include if there is a variable that relates to a TextMesh Pro text.
using UnityEngine.UI;
using UnityEngine;

public class VulnerabilityColor : MonoBehaviour
{
    // Gets the enemy ball for its color
    public GameObject EnemyBall;

    // Text that will hold the color indicator
    public Text VulnerabilityIndicatorText;

    [SerializeField] public Color vulnerabilityColor;

    public float fadeOut = 1;
    private bool fadeStart = false;

    // Start is called before the first frame update
    void Start()
    {
        VulnerabilityIndicatorText.GetComponent<Text>().color = Color.black;
        // Start a delay function of random 3-5 seconds so the ChangeColor() function in EnemyShoot script have the time to start
        StartCoroutine(Wait());
    }

    // Update is called once per frame
    void Update()
    {
        if (fadeStart)
        {
            // Changes the vulnerability indicator to the color of the ball that the enemy shooted
            VulnerabilityIndicatorText.GetComponent<Text>().color = vulnerabilityColor;

            Debug.Log("Indicator changed color");

            if (fadeOut > 0)
                fadeOut -= Time.deltaTime * 2;
        }
    }

    public IEnumerator Wait()
    {
        // Start a delay of random 3-5 seconds like for the enemy shooting function
        yield return new WaitForSeconds(Random.Range(3.0f, 5.0f));

        fadeStart = true;

        // Changes the vulnerability indicator to the color of the ball that the enemy shooted
        VulnerabilityIndicatorText.GetComponent<Text>().color = vulnerabilityColor;
    }
}
